// <auto-generated />
using APIFarmacia.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace APIFarmacia.Migrations
{
    [DbContext(typeof(ConexionPostgreSQL))]
    [Migration("20240629040612_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("APIFarmacia.Models.Cliente", b =>
                {
                    b.Property<int>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_cliente"));

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fechaNacimiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_cliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("APIFarmacia.Models.Detalle_Factura", b =>
                {
                    b.Property<int>("det_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("det_id"));

                    b.Property<int>("det_cantidad")
                        .HasColumnType("integer");

                    b.Property<double>("det_iva")
                        .HasColumnType("double precision");

                    b.Property<double>("det_precio_unitario")
                        .HasColumnType("double precision");

                    b.Property<double>("det_subtotal")
                        .HasColumnType("double precision");

                    b.Property<double>("det_total")
                        .HasColumnType("double precision");

                    b.Property<int>("factura_id")
                        .HasColumnType("integer");

                    b.Property<int>("producto_id")
                        .HasColumnType("integer");

                    b.HasKey("det_id");

                    b.ToTable("Detalle_Facturas");
                });

            modelBuilder.Entity("APIFarmacia.Models.Factura", b =>
                {
                    b.Property<int>("fac_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("fac_id"));

                    b.Property<string>("fac_fecha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("fac_subTotal")
                        .HasColumnType("double precision");

                    b.Property<int>("fac_tipo")
                        .HasColumnType("integer");

                    b.Property<double>("fac_total")
                        .HasColumnType("double precision");

                    b.Property<double>("fac_total_iva")
                        .HasColumnType("double precision");

                    b.Property<int>("id_cliente")
                        .HasColumnType("integer");

                    b.HasKey("fac_id");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("APIFarmacia.Models.Productos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("codigo_producto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("iva")
                        .HasColumnType("double precision");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("precio")
                        .HasColumnType("double precision");

                    b.Property<int>("stock")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("APIFarmacia.Models.Usuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fechanacimiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("passwords")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
